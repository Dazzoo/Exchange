{"version":3,"sources":["logo.svg","Components/Convert.js","Components/Parse.js","Components/NavBar/NavBar.js","redux/API.js","redux/commonReducer.js","App.js","reportWebVitals.js","redux/store-redux.js","index.js","Components/NavBar/NavBar.module.css"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","Convert","props","useEffect","GetCurrencyList","classes","useState","currencyFROM","setCurrencyFROM","currencyTO","setCurrencyTO","valueFROM","setValueFROM","valueTO","setValueTO","GetCurrentCoefficient","currentCoefficient","currencyList","className","noValidate","autoComplete","TextField","id","value","onChange","event","target","label","select","helperText","map","currency","MenuItem","Parse","Currency","setCurrency","GetCurrencyParseList","currencyParse","Object","entries","key","NavBar","styles","to","nav","activeClassName","active","instance","axios","withCredentials","APIKeysList","randomAPI","Math","floor","random","length","ExchangeAPI","getCurrencyÐ¡oefficient","fromCurrency","toCurrency","Currencies","get","response","params","data","results","val","getParseAllValues","currenciesToParse","Map","i","coefs","set","ParseObj","fromEntries","getCurrenciesList","CurrenciesList","r","push","COMMON_SET_CURRENCY_LIST","COMMON_SET_CURRENT_COEFFICIENT","COMMON_SET_CURRENCY_PARSE","initialState","commonReducer","state","action","type","coef","parseList","AppContainer","connect","commonData","dispatch","a","alert","message","console","log","path","render","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5bd433dc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, useEffect} from 'react'\r\nimport {connect} from \"react-redux\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '15ch',\r\n        },\r\n    },\r\n}))\r\n\r\n\r\nconst Convert = (props) => {\r\n    useEffect(() => {\r\n        props.GetCurrencyList()\r\n    },[])\r\n\r\n    const classes = useStyles()\r\n    const [currencyFROM, setCurrencyFROM] = useState('UAH');\r\n    const [currencyTO, setCurrencyTO] = useState('UAH');\r\n    const [valueFROM, setValueFROM] = useState('');\r\n    const [valueTO, setValueTO] = useState('');\r\n\r\n    useEffect(() => {\r\n        props.GetCurrentCoefficient(currencyFROM, currencyTO)\r\n    },[currencyFROM, currencyTO])\r\n\r\n    useEffect(() => {\r\n        setValueTO(valueFROM * props.currentCoefficient)\r\n    },[props.currentCoefficient])\r\n\r\n    const handleCurrencyFROM = (event) => {\r\n        setCurrencyFROM(event.target.value)\r\n        setValueTO(valueFROM * props.currentCoefficient)\r\n    }\r\n    const handleCurrencyTO = (event) => {\r\n        setCurrencyTO(event.target.value)\r\n        setValueTO(valueFROM * props.currentCoefficient)\r\n    }\r\n    const handleValueFROM = (event) => {\r\n        setValueFROM(event.target.value)\r\n        setValueTO(event.target.value * props.currentCoefficient)\r\n    }\r\n    if(!props.currencyList){\r\n        return (\r\n            <div>Loading...</div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n\r\n        <TextField id=\"standard-basic\" value={valueFROM} onChange={handleValueFROM}  label=\"From\" />\r\n            <TextField\r\n        id=\"standard-select-currency\"\r\n        select\r\n        label=\"Currency\"\r\n        value={currencyFROM}\r\n        onChange={handleCurrencyFROM}\r\n        helperText=\"Please select your currency\"\r\n            >\r\n            {props.currencyList.map((currency) => (\r\n                <MenuItem key={currency} value={currency}>\r\n        {currency}\r\n        </MenuItem>\r\n        ))}\r\n        </TextField>\r\n\r\n        <TextField id=\"standard-basic\" value={valueTO} label=\"To\" />\r\n            <TextField\r\n        id=\"standard-select-currency\"\r\n        select\r\n        label=\"Currency\"\r\n        value={currencyTO}\r\n        onChange={handleCurrencyTO}\r\n        helperText=\"Please select your currency\"\r\n            >\r\n            {props.currencyList.map((currency) => (\r\n                <MenuItem key={currency} value={currency}>\r\n        {currency}\r\n        </MenuItem>\r\n        ))}\r\n        </TextField>\r\n\r\n        </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Convert","import React, {useState, useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '15ch',\r\n        },\r\n    },\r\n}))\r\n\r\nconst Parse = (props) => {\r\n\r\n    const [Currency, setCurrency] = useState(\"USD\")\r\n\r\n    useEffect(() => {\r\n        props.GetCurrencyParseList(Currency)\r\n    },[Currency])\r\n    if(!props.currencyParse){\r\n        return (\r\n            <div>Loading...</div>\r\n        )\r\n    }\r\n\r\n    const handleCurrencyFROM = (event) => {\r\n        setCurrency(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                id=\"standard-select-currency\"\r\n                select\r\n                label=\"Currency\"\r\n                value={Currency}\r\n                onChange={handleCurrencyFROM}\r\n                helperText=\"Price per 1\"\r\n            >\r\n                {props.currencyList.map((currency) => (\r\n                    <MenuItem key={currency} value={currency}>\r\n                        {currency}\r\n                    </MenuItem>\r\n                ))}\r\n            </TextField>\r\n\r\n            {Object.entries(props.currencyParse).map(([key, value]) => <div>{value} {key}</div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Parse","import styles from './NavBar.module.css'\r\nimport {NavLink} from \"react-router-dom\"\r\nimport React from 'react'\r\n\r\nconst NavBar = (props) => {\r\n\r\n    return (\r\n        <div className={styles.NavBar}>\r\n            <ul>\r\n                <li><NavLink  to=\"/convert\" className={styles.nav} activeClassName={styles.active}>Convert</NavLink></li>\r\n                <li><NavLink  to=\"/parse\" className={styles.nav} activeClassName={styles.active}>Parse</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: false\r\n}) // API KEY = f908909d6e61710838c7   OR   3d97b8cfb61a8b3a78b2   OR   baf6ea6181cd1e78e86f    881eb329e9dc025abcd6   31db4efb38325b7fa37f\r\n\r\nconst APIKeysList = [\"f908909d6e61710838c7\", \"3d97b8cfb61a8b3a78b2\", \"baf6ea6181cd1e78e86f\", \"881eb329e9dc025abcd6\", \"31db4efb38325b7fa37f\"]\r\nlet randomAPI = APIKeysList[Math.floor(Math.random()*APIKeysList.length)]\r\n\r\n\r\nexport const ExchangeAPI = {\r\n    async getCurrencyÐ¡oefficient(fromCurrency, toCurrency){\r\n        let Currencies = (`${fromCurrency}_${toCurrency}`)\r\n        let response = await instance.get(`https://free.currconv.com/api/v7/convert?apiKey=${randomAPI}&q=${Currencies}`)\r\n        let params = response.data.results[Currencies]\r\n        return params.val\r\n    },\r\n    async getParseAllValues(fromCurrency){\r\n        let currenciesToParse = [\"USD\", \"EUR\", \"RUB\", \"GBP\", \"UAH\", \"BTC\"]\r\n        let Parse = new Map()\r\n        for(let i = 0; i < currenciesToParse.length; i++){\r\n            let coefs = await this.getCurrencyÐ¡oefficient(fromCurrency, currenciesToParse[i])\r\n            Parse.set(currenciesToParse[i], coefs)\r\n        }\r\n        let ParseObj = Object.fromEntries(Parse.entries())\r\n        return ParseObj\r\n    },\r\n    async getCurrenciesList(){\r\n        let CurrenciesList = []\r\n        let response = await instance.get(`https://free.currconv.com/api/v7/currencies?apiKey=${randomAPI}`)\r\n        for(let r in response.data.results){\r\n            CurrenciesList.push(r)\r\n        }\r\n        return CurrenciesList\r\n    }\r\n\r\n}\r\n","import { ExchangeAPI } from './API'\r\nconst COMMON_SET_CURRENCY_LIST = 'COMMON/SET-CURRENCY-LIST'\r\nconst COMMON_SET_CURRENT_COEFFICIENT = 'COMMON/SET-CURRENT-COEFFICIENT'\r\nconst COMMON_SET_CURRENCY_PARSE = 'COMMON/SET-CURRENCY-PARSE'\r\n\r\nlet initialState = {\r\n    currencyList: null,\r\n    currencyParse: null,\r\n    currentCoefficient: 1\r\n\r\n}\r\n\r\nconst commonReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case COMMON_SET_CURRENCY_LIST:\r\n            return{...state,\r\n                currencyList: action.currencyList\r\n            }\r\n        case COMMON_SET_CURRENT_COEFFICIENT:\r\n            return{...state,\r\n                currentCoefficient: action.coef\r\n            }\r\n        case COMMON_SET_CURRENCY_PARSE:\r\n            return{...state,\r\n                currencyParse: action.parseList\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const SetCurrencyList = (currencyList) => ({type: COMMON_SET_CURRENCY_LIST, currencyList })\r\nexport const SetCurrentCoefficient = (coef) => ({type: COMMON_SET_CURRENT_COEFFICIENT, coef })\r\nexport const SetCurrencyParseList = (parseList) => ({type: COMMON_SET_CURRENCY_PARSE, parseList })\r\n\r\nexport const GetCurrencyList = () => async (dispatch) => {\r\n    try {\r\n        let response = await ExchangeAPI.getCurrenciesList()\r\n        dispatch(SetCurrencyList(response))\r\n    } catch (error) {\r\n        alert(error.message)\r\n        console.log(error.message)\r\n    }\r\n}\r\n\r\nexport const GetCurrentCoefficient = (fromCurrency, toCurrency) => async (dispatch) => {\r\n    try {\r\n        let response = await ExchangeAPI.getCurrencyÐ¡oefficient(fromCurrency, toCurrency)\r\n        dispatch(SetCurrentCoefficient(response))\r\n    } catch (error) {\r\n        alert(error.message)\r\n        console.log(error.message)\r\n    }\r\n}\r\n\r\nexport const GetCurrencyParseList = (fromCurrency) => async (dispatch) => {\r\n    try {\r\n        let response = await ExchangeAPI.getParseAllValues(fromCurrency)\r\n        dispatch(SetCurrencyParseList(response))\r\n    } catch (error) {\r\n        alert(error.message)\r\n        console.log(error.message)\r\n    }\r\n}\r\n\r\nexport default commonReducer","import logo from './logo.svg';\nimport React from 'react'\nimport './App.css';\nimport {connect} from \"react-redux\"\nimport {HashRouter, Route, Redirect} from \"react-router-dom\";\nimport Convert from './Components/Convert'\nimport Parse from  './Components/Parse'\nimport NavBar from './Components/NavBar/NavBar'\nimport {GetCurrencyList, GetCurrentCoefficient, GetCurrencyParseList} from './redux/commonReducer'\n\n\nfunction App(props) {\n\n\n  return (\n    <div className=\"App\">\n        <NavBar/>\n        <Route path='/' render={() => <Redirect from=\"/\" to=\"/convert\" />} />\n        <Route path='/convert' render={() => <Convert {...props} />} />\n        <Route path='/parse' render={() => <Parse {...props} />} />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currencyList: state.commonData.currencyList,\n        currentCoefficient: state.commonData.currentCoefficient,\n        currencyParse: state.commonData.currencyParse\n    }\n}\n\nconst AppContainer = connect(mapStateToProps, {GetCurrencyList, GetCurrentCoefficient, GetCurrencyParseList})(App)\n\nexport default AppContainer;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore, applyMiddleware, compose} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport commonReducer from './commonReducer'\r\n\r\nlet reducers = combineReducers({\r\n    commonData: commonReducer\r\n})\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store-redux'\nimport {HashRouter, Route} from \"react-router-dom\";\nimport { Provider } from 'react-redux'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__1r8sE\",\"sidebarWrapper\":\"NavBar_sidebarWrapper__37Hbj\",\"active\":\"NavBar_active__2pxVp\",\"friends\":\"NavBar_friends__2bY4g\"};"],"sourceRoot":""}